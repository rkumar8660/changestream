#Replica Set Example:
#Website How to do that
#https://37yonub.ru/articles/mongo-replica-set-docker-localhost
#Up containers
#Now just say docker-compose up -d to start three instances of the MongoDB. Compose will make a network for these three containers so we don’t need to deal with this by ourself.
#
#Look at the ports - each container exposes port from 27017(standart) to 27019 to the outer world. In our case outer - it’s your local machine.
#From this moment you can connect to every instance of MongoDB inside Docker’s network.
#
#Now let’s make our three containers to wark as a replica set.
#
#Set up replica set
#Connect to mongo shell at our primary container.
#Say docker exec -it mongo0 mongo.
#
#Type inside a shell
#
#config={"_id":"rs0","members":[{"_id":0,"host":"mongo0:27017"},{"_id":1,"host":"mongo1:27017"},{"_id":2,"host":"mongo2:27017"}]}
#rs.initiate(config)
#And that’s it.
#
#If you connect to each container, you’ll see rs0:PRIMARY> prompt at mongo0, and rs0:SECONDARY> at others two.
#
#Now you can connect your code to replica set using
#spring.data.mongodb.uri=mongodb://root:root@localhost:27017/changestream?replicaSet=rs0


#rajeshkumar@Rajeshs-MBP reactive-mongo-replica-sets % docker exec -it mongo0 mongo
#MongoDB shell version v5.0.6
#connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
#Implicit session: session { "id" : UUID("fc340afe-da52-431b-afdd-ca35e7fceaf4") }
#MongoDB server version: 5.0.6
#================
#Warning: the "mongo" shell has been superseded by "mongosh",
#which delivers improved usability and compatibility.The "mongo" shell has been deprecated and will be removed in
#an upcoming release.
#For installation instructions, see
#https://docs.mongodb.com/mongodb-shell/install/
#================
#Welcome to the MongoDB shell.
#For interactive help, type "help".
#For more comprehensive documentation, see
#  https://docs.mongodb.com/
#Questions? Try the MongoDB Developer Community Forums
#  https://community.mongodb.com
#---
#The server generated these startup warnings when booting: 
#        2022-02-12T04:16:37.305+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
#        2022-02-12T04:16:37.836+00:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
#        2022-02-12T04:16:37.836+00:00: You are running this process as the root user, which is not recommended
#---
#---
#        Enable MongoDB's free cloud-based monitoring service, which will then receive and display
#        metrics about your deployment (disk utilization, CPU, operation statistics, etc).
#
#        The monitoring data will be available on a MongoDB website with a unique URL accessible to you
#        and anyone you share the URL with. MongoDB may use this information to make product
#        improvements and to suggest MongoDB products and deployment options to you.
#
#        To enable free monitoring, run the following command: db.enableFreeMonitoring()
#        To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
#---
#> config={"_id":"rs0","members":[{"_id":0,"host":"mongo0:27017"},{"_id":1,"host":"mongo1:27017"},{"_id":2,"host":"mongo2:27017"}]}
#{
#  "_id" : "rs0",
#  "members" : [
#    {
#      "_id" : 0,
#      "host" : "mongo0:27017"
#    },
#    {
#      "_id" : 1,
#      "host" : "mongo1:27017"
#    },
#    {
#      "_id" : 2,
#      "host" : "mongo2:27017"
#    }
#  ]
#}
#> rs.initiate(config)
#{ "ok" : 1 }
#rs0:SECONDARY> 


version: "3"
services:
  mongo0:
    hostname: mongo0
    container_name: mongo0
    image: mongo
    ports:
      - 27017:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  mongo1:
    hostname: mongo1
    container_name: mongo1
    image: mongo
    ports:
      - 27018:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  mongo2:
    hostname: mongo2
    container_name: mongo2
    image: mongo
    ports:
      - 27019:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]